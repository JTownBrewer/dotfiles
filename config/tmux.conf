set -g default-terminal "screen-256color"
run-shell "powerline-daemon -q"

# Try to load powerline config from OS package locations
source -q "/usr/share/powerline/bindings/tmux/powerline.conf"
source -q "/usr/share/tmux/powerline.conf"

# Try to load powerline from site-packages
if-shell "[ -n $POWERLINE ]" "source -q ${POWERLINE}/bindings/tmux/powerline.conf"

# This lets ctrl-B B go to the previous window
bind-key b select-window -l

# Panes
#set -g pane-border-style "fg=white"
set -g display-panes-colour "black"
set -g display-panes-active-colour "white"

set -g pane-border-status "off"
set -g pane-border-format "[#[fg=white]#{?pane_active,#[bold],} :#P: #T #[fg=default,nobold]]"
set -g pane-border-indicators arrows
# Auto hide pane-border-status line when only one pane is displayed (see tmux/tmux#566)
set-hook -g 'after-new-session'  'run-shell -b "if [ \#{window_panes} -eq 1 ]; then tmux set pane-border-status off; fi"'
set-hook -g 'after-new-window'   'run-shell -b "if [ \#{window_panes} -eq 1 ]; then tmux set pane-border-status off; fi"'
set-hook -g 'after-kill-pane'    'run-shell -b "if [ \#{window_panes} -eq 1 ]; then tmux set pane-border-status off; fi"'
set-hook -g 'pane-exited'        'run-shell -b "if [ \#{window_panes} -eq 1 ]; then tmux set pane-border-status off; fi"'
set-hook -g 'after-split-window' 'run-shell -b "if [ \#{window_panes} -gt 1 ]; then tmux set pane-border-status top; fi"'
